# Command on Seth's machine from this directory is
# ./pro_game_analysis.sh -a -b -g 50 -w ../../weights.txt network.csv ../../../training/kgs4d-19-2015/ ../../pro_game_build/
#
# kgs archive can be downloaded here: https://u-go.net/gamerecords/
# still looking for a link to gokifu archives (all in one place)

function print_help {
    echo "
usage: $0 [-h] [-a] [-b] [-g games] data_csv game_dir network_dir

This script analyzes leelaz performance with all the networks under network_dir
to give a rough sense of the quality of each network.

optional arguments:
  -h              show this help message and exit
  -a              Run analysis (verus just building files)
  -b              Build leelaz in the build folder
  -g games        Number of games to test over Default: 1000

Positional arguments
  data_csv     Path to output.csv generated by fetch_all_networks.py
  game_dir     Directory of professions sgf files
  network_dir  Directory containing network files to test
"
}

GAMES=1000
TMP_DIR=../../pro_game_build
while getopts habw:g: option
do
 case "${option}"
 in
 h) print_help; exit 2;;
 a) ANALYSIS=1;;
 b) BUILD=1;;
 w) WEIGHT_FILE=$OPTARG;;
 g) GAMES=$OPTARG;;
 esac
done

# remove parsed arguements
shift $((OPTIND-1))

# Arg checking
if [ "$#" -ne 3 ]; then
    print_help;
    exit 2;
fi

DATA_CSV=$1
GAME_DIR=$2
NETWORK_DIR=$3

if [ ! -f "$DATA_CSV" ]; then
    echo "data_csv(\"$DATA_CSV\") does not exist"
    exit 2;
fi

if [ ! -d "$GAME_DIR" ]; then
    echo "game_dir(\"$GAME_DIR\") does not exist"
    exit 2;
fi

if [ ! -d "$NETWORK_DIR" ]; then
    echo "network_dir(\"$NETWORK_DIR\") does not exist"
    exit 2;
fi

# Build
if [ ! -z "$BUILD" ]; then
    mkdir -p "$TMP_DIR"
    cd "$TMP_DIR"
    cmake ..
    make
    cd -
fi

# Collect games
echo "collecting $GAMES games from $GAME_DIR for testing"
GAMES_TO_TEST=$TMP_DIR/game_list.txt
SGF_TO_TEST=$TMP_DIR/games.sgf
find "$GAME_DIR" -name "*.sgf" | sort -R | head -n$GAMES > "$GAMES_TO_TEST"
echo "collected `wc -l < "$GAMES_TO_TEST"` games into $GAMES_TO_TEST"
cat "$GAMES_TO_TEST" | xargs cat > "$SGF_TO_TEST"

# Analysis
if [ ! -z "$ANALYSIS" ]; then
    testNetwork() {
        net=`echo "$1" | cut -d, -f1`
        if [ "$net" == "hash" ]; then
            echo "$1, games,positions,pro_percent,mse_outcome"
            return
        fi

        command="echo \"test_supervised $SGF_TO_TEST\" | \"$TMP_DIR/leelaz\" -q -t1 -s123 -w \"$NETWORK_DIR/$net\" | tail -n4 | head -n1"
        #echo "$command"
        results=`sh -c "$command"`
        # historically used for removing % and text.
        #    sed 's#[^,]*[/ ]\([a-f0-9.%]*\)\(,\|$\)#\1,#g'`
        echo "$1, $results"
    }

    echo
    cat "$DATA_CSV" | while read data; do
        testNetwork "$data"
    done

    # TODO add supervised file
fi
